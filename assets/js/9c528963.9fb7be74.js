"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8398],{3905:(e,t,i)=>{i.d(t,{Zo:()=>s,kt:()=>f});var n=i(7294);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function o(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function a(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?o(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)i=o[n],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)i=o[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var d=n.createContext({}),u=function(e){var t=n.useContext(d),i=t;return e&&(i="function"==typeof e?e(t):a(a({},t),e)),i},s=function(e){var t=u(e.components);return n.createElement(d.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var i=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=u(i),p=r,f=c["".concat(d,".").concat(p)]||c[p]||m[p]||o;return i?n.createElement(f,a(a({ref:t},s),{},{components:i})):n.createElement(f,a({ref:t},s))}));function f(e,t){var i=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=i.length,a=new Array(o);a[0]=p;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[c]="string"==typeof e?e:r,a[1]=l;for(var u=2;u<o;u++)a[u]=i[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,i)}p.displayName="MDXCreateElement"},5766:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var n=i(7462),r=(i(7294),i(3905));const o={description:"Body limit middleware"},a="Body Limit",l={unversionedId:"middleware/body-limit",id:"middleware/body-limit",title:"Body Limit",description:"Body limit middleware",source:"@site/docs/middleware/body-limit.md",sourceDirName:"middleware",slug:"/middleware/body-limit",permalink:"/docs/middleware/body-limit",draft:!1,editUrl:"https://github.com/labstack/echox/blob/master/website/docs/middleware/body-limit.md",tags:[],version:"current",frontMatter:{description:"Body limit middleware"},sidebar:"docsSidebar",previous:{title:"Body Dump",permalink:"/docs/middleware/body-dump"},next:{title:"Casbin Auth",permalink:"/docs/middleware/casbin-auth"}},d={},u=[{value:"Usage",id:"usage",level:2},{value:"Custom Configuration",id:"custom-configuration",level:2},{value:"Usage",id:"usage-1",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Default Configuration",id:"default-configuration",level:3}],s={toc:u},c="wrapper";function m(e){let{components:t,...i}=e;return(0,r.kt)(c,(0,n.Z)({},s,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"body-limit"},"Body Limit"),(0,r.kt)("p",null,'Body limit middleware sets the maximum allowed size for a request body, if the\nsize exceeds the configured limit, it sends "413 - Request Entity Too Large"\nresponse. The body limit is determined based on both ',(0,r.kt)("inlineCode",{parentName:"p"},"Content-Length")," request\nheader and actual content read, which makes it super secure."),(0,r.kt)("p",null,"Limit can be specified as ",(0,r.kt)("inlineCode",{parentName:"p"},"4x")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"4xB"),", where x is one of the multiple from K, M,\nG, T or P."),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e := echo.New()\ne.Use(middleware.BodyLimit("2M"))\n')),(0,r.kt)("h2",{id:"custom-configuration"},"Custom Configuration"),(0,r.kt)("h3",{id:"usage-1"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"e := echo.New()\ne.Use(middleware.BodyLimitWithConfig(middleware.BodyLimitConfig{}))\n")),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'BodyLimitConfig struct {\n  // Skipper defines a function to skip middleware.\n  Skipper Skipper\n\n  // Maximum allowed size for a request body, it can be specified\n  // as `4x` or `4xB`, where x is one of the multiple from K, M, G, T or P.\n  Limit string `json:"limit"`\n}\n')),(0,r.kt)("h3",{id:"default-configuration"},"Default Configuration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"DefaultBodyLimitConfig = BodyLimitConfig{\n  Skipper: DefaultSkipper,\n}\n")))}m.isMDXComponent=!0}}]);