"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3615],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>g});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=n.createContext({}),s=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=s(e.components);return n.createElement(c.Provider,{value:r},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(t),f=a,g=d["".concat(c,".").concat(f)]||d[f]||p[f]||o;return t?n.createElement(g,i(i({ref:r},u),{},{components:t})):n.createElement(g,i({ref:r},u))}));function g(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=f;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},4876:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=t(7462),a=(t(7294),t(3905));const o={description:"Recover middleware"},i="Recover",l={unversionedId:"middleware/recover",id:"middleware/recover",title:"Recover",description:"Recover middleware",source:"@site/docs/middleware/recover.md",sourceDirName:"middleware",slug:"/middleware/recover",permalink:"/docs/middleware/recover",draft:!1,editUrl:"https://github.com/labstack/echox/blob/master/website/docs/middleware/recover.md",tags:[],version:"current",frontMatter:{description:"Recover middleware"},sidebar:"docsSidebar",previous:{title:"Rate Limiter",permalink:"/docs/middleware/rate-limiter"},next:{title:"Redirect",permalink:"/docs/middleware/redirect"}},c={},s=[{value:"Usage",id:"usage",level:2},{value:"Custom Configuration",id:"custom-configuration",level:2},{value:"Usage",id:"usage-1",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Default Configuration",id:"default-configuration",level:3}],u={toc:s},d="wrapper";function p(e){let{components:r,...t}=e;return(0,a.kt)(d,(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"recover"},"Recover"),(0,a.kt)("p",null,"Recover middleware recovers from panics anywhere in the chain, prints stack trace\nand handles the control to the centralized\n",(0,a.kt)("a",{parentName:"p",href:"/docs/customization#http-error-handler"},"HTTPErrorHandler"),"."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"e.Use(middleware.Recover())\n")),(0,a.kt)("h2",{id:"custom-configuration"},"Custom Configuration"),(0,a.kt)("h3",{id:"usage-1"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"e := echo.New()\ne.Use(middleware.RecoverWithConfig(middleware.RecoverConfig{\n  StackSize: 1 << 10, // 1 KB\n  LogLevel:  log.ERROR,\n}))\n")),(0,a.kt)("p",null,"Example above uses a ",(0,a.kt)("inlineCode",{parentName:"p"},"StackSize")," of 1 KB, ",(0,a.kt)("inlineCode",{parentName:"p"},"LogLevel")," of error and\ndefault values for ",(0,a.kt)("inlineCode",{parentName:"p"},"DisableStackAll")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"DisablePrintStack"),"."),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'// LogErrorFunc defines a function for custom logging in the middleware.\nLogErrorFunc func(c echo.Context, err error, stack []byte) error\n\nRecoverConfig struct {\n  // Skipper defines a function to skip middleware.\n  Skipper Skipper\n\n  // Size of the stack to be printed.\n  // Optional. Default value 4KB.\n  StackSize int `yaml:"stack_size"`\n\n  // DisableStackAll disables formatting stack traces of all other goroutines\n  // into buffer after the trace for the current goroutine.\n  // Optional. Default value false.\n  DisableStackAll bool `yaml:"disable_stack_all"`\n\n  // DisablePrintStack disables printing stack trace.\n  // Optional. Default value as false.\n  DisablePrintStack bool `yaml:"disable_print_stack"`\n\n  // LogLevel is log level to printing stack trace.\n  // Optional. Default value 0 (Print).\n  LogLevel log.Lvl\n\n  // LogErrorFunc defines a function for custom logging in the middleware.\n  // If it\'s set you don\'t need to provide LogLevel for config.\n  LogErrorFunc LogErrorFunc\n}\n')),(0,a.kt)("h3",{id:"default-configuration"},"Default Configuration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"DefaultRecoverConfig = RecoverConfig{\n  Skipper:           DefaultSkipper,\n  StackSize:         4 << 10, // 4 KB\n  DisableStackAll:   false,\n  DisablePrintStack: false,\n  LogLevel:          0,\n  LogErrorFunc:      nil,\n}\n")))}p.isMDXComponent=!0}}]);