"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9305],{3905:(e,r,t)=>{t.d(r,{Zo:()=>d,kt:()=>g});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=n.createContext({}),s=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},d=function(e){var r=s(e.components);return n.createElement(p.Provider,{value:r},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(t),m=a,g=u["".concat(p,".").concat(m)]||u[m]||c[m]||o;return t?n.createElement(g,i(i({ref:r},d),{},{components:t})):n.createElement(g,i({ref:r},d))}));function g(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var p in r)hasOwnProperty.call(r,p)&&(l[p]=r[p]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6700:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=t(7462),a=(t(7294),t(3905));const o={description:"Reverse proxy middleware"},i="Proxy",l={unversionedId:"middleware/proxy",id:"middleware/proxy",title:"Proxy",description:"Reverse proxy middleware",source:"@site/docs/middleware/proxy.md",sourceDirName:"middleware",slug:"/middleware/proxy",permalink:"/docs/middleware/proxy",draft:!1,editUrl:"https://github.com/labstack/echox/blob/master/website/docs/middleware/proxy.md",tags:[],version:"current",frontMatter:{description:"Reverse proxy middleware"},sidebar:"docsSidebar",previous:{title:"Prometheus",permalink:"/docs/middleware/prometheus"},next:{title:"Rate Limiter",permalink:"/docs/middleware/rate-limiter"}},p={},s=[{value:"Usage",id:"usage",level:3},{value:"Custom Configuration",id:"custom-configuration",level:2},{value:"Usage",id:"usage-1",level:3},{value:"Configuration",id:"configuration",level:3},{value:"Default Configuration",id:"default-configuration",level:3},{value:"Regex-based Rules",id:"regex-based-rules",level:3},{value:"Example",id:"example",level:2}],d={toc:s},u="wrapper";function c(e){let{components:r,...t}=e;return(0,a.kt)(u,(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"proxy"},"Proxy"),(0,a.kt)("p",null,"Proxy provides an HTTP/WebSocket reverse proxy middleware. It forwards a request\nto upstream server using a configured load balancing technique."),(0,a.kt)("h3",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'url1, err := url.Parse("http://localhost:8081")\nif err != nil {\n  e.Logger.Fatal(err)\n}\nurl2, err := url.Parse("http://localhost:8082")\nif err != nil {\n  e.Logger.Fatal(err)\n}\ne.Use(middleware.Proxy(middleware.NewRoundRobinBalancer([]*middleware.ProxyTarget{\n  {\n    URL: url1,\n  },\n  {\n    URL: url2,\n  },\n})))\n')),(0,a.kt)("h2",{id:"custom-configuration"},"Custom Configuration"),(0,a.kt)("h3",{id:"usage-1"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"e := echo.New()\ne.Use(middleware.ProxyWithConfig(middleware.ProxyConfig{}))\n")),(0,a.kt)("h3",{id:"configuration"},"Configuration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'// ProxyConfig defines the config for Proxy middleware.\n  ProxyConfig struct {\n    // Skipper defines a function to skip middleware.\n    Skipper Skipper\n\n    // Balancer defines a load balancing technique.\n    // Required.\n    Balancer ProxyBalancer\n\n    // Rewrite defines URL path rewrite rules. The values captured in asterisk can be\n    // retrieved by index e.g. $1, $2 and so on.\n    Rewrite map[string]string\n\n    // RegexRewrite defines rewrite rules using regexp.Rexexp with captures\n    // Every capture group in the values can be retrieved by index e.g. $1, $2 and so on.\n    RegexRewrite map[*regexp.Regexp]string\n\n    // Context key to store selected ProxyTarget into context.\n    // Optional. Default value "target".\n    ContextKey string\n\n    // To customize the transport to remote.\n    // Examples: If custom TLS certificates are required.\n    Transport http.RoundTripper\n\n    // ModifyResponse defines function to modify response from ProxyTarget.\n    ModifyResponse func(*http.Response) error\n')),(0,a.kt)("h3",{id:"default-configuration"},"Default Configuration"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Value"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Skipper"),(0,a.kt)("td",{parentName:"tr",align:null},"DefaultSkipper")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"ContextKey"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"target"))))),(0,a.kt)("h3",{id:"regex-based-rules"},"Regex-based Rules"),(0,a.kt)("p",null,"For advanced rewriting of proxy requests rules may also be defined using\nregular expression. Normal capture groups can be defined using ",(0,a.kt)("inlineCode",{parentName:"p"},"()")," and referenced by index (",(0,a.kt)("inlineCode",{parentName:"p"},"$1"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"$2"),", ...) for the rewritten path."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"RegexRules")," and normal ",(0,a.kt)("inlineCode",{parentName:"p"},"Rules")," can be combined."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'  e.Use(ProxyWithConfig(ProxyConfig{\n    Balancer: rrb,\n    Rewrite: map[string]string{\n      "^/v1/*":     "/v2/$1",\n    },\n    RegexRewrite: map[*regexp.Regexp]string{\n      regexp.MustCompile("^/foo/([0-9].*)"):  "/num/$1",\n      regexp.MustCompile("^/bar/(.+?)/(.*)"): "/baz/$2/$1",\n    },\n  }))\n')),(0,a.kt)("h2",{id:"example"},(0,a.kt)("a",{parentName:"h2",href:"/docs/cookbook/reverse-proxy"},"Example")))}c.isMDXComponent=!0}}]);