"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2411],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>h});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(t),m=a,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||o;return t?r.createElement(h,i(i({ref:n},p),{},{components:t})):r.createElement(h,i({ref:n},p))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1618:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=t(7462),a=(t(7294),t(3905));const o={description:"Routing requests",slug:"/routing",sidebar_position:10},i="Routing",l={unversionedId:"guide/routing",id:"guide/routing",title:"Routing",description:"Routing requests",source:"@site/docs/guide/routing.md",sourceDirName:"guide",slug:"/routing",permalink:"/docs/routing",draft:!1,editUrl:"https://github.com/labstack/echox/blob/master/website/docs/guide/routing.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{description:"Routing requests",slug:"/routing",sidebar_position:10},sidebar:"docsSidebar",previous:{title:"Response",permalink:"/docs/response"},next:{title:"Static Files",permalink:"/docs/static-files"}},s={},u=[{value:"Match-any",id:"match-any",level:2},{value:"Path Matching Order",id:"path-matching-order",level:2},{value:"Group",id:"group",level:2},{value:"Route Naming",id:"route-naming",level:2},{value:"URI Building",id:"uri-building",level:2},{value:"List Routes",id:"list-routes",level:2}],p={toc:u},c="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(c,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"routing"},"Routing"),(0,a.kt)("p",null,"Echo's router is based on ",(0,a.kt)("a",{parentName:"p",href:"http://en.wikipedia.org/wiki/Radix_tree"},"radix tree"),", making\nroute lookup really fast. It leverages ",(0,a.kt)("a",{parentName:"p",href:"https://golang.org/pkg/sync/#Pool"},"sync pool"),"\nto reuse memory and achieve zero dynamic memory allocation with no GC overhead."),(0,a.kt)("p",null,"Routes can be registered by specifying HTTP method, path and a matching handler.\nFor example, code below registers a route for method ",(0,a.kt)("inlineCode",{parentName:"p"},"GET"),", path ",(0,a.kt)("inlineCode",{parentName:"p"},"/hello")," and a\nhandler which sends ",(0,a.kt)("inlineCode",{parentName:"p"},"Hello, World!")," HTTP response."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'// Handler\nfunc hello(c echo.Context) error {\n    return c.String(http.StatusOK, "Hello, World!")\n}\n\n// Route\ne.GET("/hello", hello)\n')),(0,a.kt)("p",null,"You can use ",(0,a.kt)("inlineCode",{parentName:"p"},"Echo.Any(path string, h Handler)")," to register a handler for all HTTP methods.\nIf you want to register it for some methods use ",(0,a.kt)("inlineCode",{parentName:"p"},"Echo.Match(methods []string, path string, h Handler)"),"."),(0,a.kt)("p",null,"Echo defines handler function as ",(0,a.kt)("inlineCode",{parentName:"p"},"func(echo.Context) error")," where ",(0,a.kt)("inlineCode",{parentName:"p"},"echo.Context")," primarily\nholds HTTP request and response interfaces."),(0,a.kt)("h2",{id:"match-any"},"Match-any"),(0,a.kt)("p",null,"Matches zero or more characters in the path. For example, pattern ",(0,a.kt)("inlineCode",{parentName:"p"},"/users/*")," will\nmatch:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"/users/")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"/users/1")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"/users/1/files/1")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"/users/anything..."))),(0,a.kt)("h2",{id:"path-matching-order"},"Path Matching Order"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Static"),(0,a.kt)("li",{parentName:"ul"},"Param"),(0,a.kt)("li",{parentName:"ul"},"Match any")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Example")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'e.GET("/users/:id", func(c echo.Context) error {\n    return c.String(http.StatusOK, "/users/:id")\n})\n\ne.GET("/users/new", func(c echo.Context) error {\n    return c.String(http.StatusOK, "/users/new")\n})\n\ne.GET("/users/1/files/*", func(c echo.Context) error {\n    return c.String(http.StatusOK, "/users/1/files/*")\n})\n')),(0,a.kt)("p",null,"Above routes would resolve in the following order:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"/users/new")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"/users/:id")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"/users/1/files/*"))),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Routes can be written in any order.")),(0,a.kt)("h2",{id:"group"},"Group"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Echo#Group(prefix string, m ...Middleware) *Group")),(0,a.kt)("p",null,"Routes with common prefix can be grouped to define a new sub-router with optional\nmiddleware. In addition to specified middleware group also inherits parent middleware.\nTo add middleware later in the group you can use ",(0,a.kt)("inlineCode",{parentName:"p"},"Group.Use(m ...Middleware)"),".\nGroups can also be nested."),(0,a.kt)("p",null,"In the code below, we create an admin group which requires basic HTTP authentication\nfor routes ",(0,a.kt)("inlineCode",{parentName:"p"},"/admin/*"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'g := e.Group("/admin")\ng.Use(middleware.BasicAuth(func(username, password string, c echo.Context) (bool, error) {\n    if username == "joe" && password == "secret" {\n        return true, nil\n    }\n    return false, nil\n}))\n')),(0,a.kt)("h2",{id:"route-naming"},"Route Naming"),(0,a.kt)("p",null,"Each of the registration methods returns a ",(0,a.kt)("inlineCode",{parentName:"p"},"Route")," object, which can be used to name a route after the registration. For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'route := e.POST("/users", func(c echo.Context) error {\n})\nroute.Name = "create-user"\n\n// or using the inline syntax\ne.GET("/users/:id", func(c echo.Context) error {\n}).Name = "get-user"\n')),(0,a.kt)("p",null,"Route names can be very useful when generating URIs from the templates, where you can't access the handler references or when you have multiple routes with the same handler."),(0,a.kt)("h2",{id:"uri-building"},"URI Building"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Echo#URI(handler HandlerFunc, params ...interface{})")," can be used to generate URI for any handler with specified path parameters. It's helpful to centralize all your\nURI patterns which ease in refactoring your application."),(0,a.kt)("p",null,"For example, ",(0,a.kt)("inlineCode",{parentName:"p"},"e.URI(h, 1)")," will generate ",(0,a.kt)("inlineCode",{parentName:"p"},"/users/1")," for the route registered below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'// Handler\nh := func(c echo.Context) error {\n    return c.String(http.StatusOK, "OK")\n}\n\n// Route\ne.GET("/users/:id", h)\n')),(0,a.kt)("p",null,"In addition to ",(0,a.kt)("inlineCode",{parentName:"p"},"Echo#URI"),", there is also ",(0,a.kt)("inlineCode",{parentName:"p"},"Echo#Reverse(name string, params ...interface{})")," which is used to generate URIs based on the route name. For example a call to ",(0,a.kt)("inlineCode",{parentName:"p"},'Echo#Reverse("foobar", 1234)')," would generate the URI ",(0,a.kt)("inlineCode",{parentName:"p"},"/users/1234")," if the ",(0,a.kt)("inlineCode",{parentName:"p"},"foobar")," route is registered like below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'// Handler\nh := func(c echo.Context) error {\n    return c.String(http.StatusOK, "OK")\n}\n\n// Route\ne.GET("/users/:id", h).Name = "foobar"\n')),(0,a.kt)("h2",{id:"list-routes"},"List Routes"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Echo#Routes() []*Route")," can be used to list all registered routes in the order\nthey are defined. Each route contains HTTP method, path and an associated handler."),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Example")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'// Handlers\nfunc createUser(c echo.Context) error {\n}\n\nfunc findUser(c echo.Context) error {\n}\n\nfunc updateUser(c echo.Context) error {\n}\n\nfunc deleteUser(c echo.Context) error {\n}\n\n// Routes\ne.POST("/users", createUser)\ne.GET("/users", findUser)\ne.PUT("/users", updateUser)\ne.DELETE("/users", deleteUser)\n')),(0,a.kt)("p",null,"Using the following code you can output all the routes to a JSON file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'data, err := json.MarshalIndent(e.Routes(), "", "  ")\nif err != nil {\n    return err\n}\nos.WriteFile("routes.json", data, 0644)\n')),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"routes.json")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'[\n  {\n    "method": "POST",\n    "path": "/users",\n    "name": "main.createUser"\n  },\n  {\n    "method": "GET",\n    "path": "/users",\n    "name": "main.findUser"\n  },\n  {\n    "method": "PUT",\n    "path": "/users",\n    "name": "main.updateUser"\n  },\n  {\n    "method": "DELETE",\n    "path": "/users",\n    "name": "main.deleteUser"\n  }\n]\n')))}d.isMDXComponent=!0}}]);