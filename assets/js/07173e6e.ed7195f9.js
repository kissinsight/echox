"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2618],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=o.createContext({}),c=function(e){var t=o.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(r),h=n,m=u["".concat(l,".").concat(h)]||u[h]||d[h]||a;return r?o.createElement(m,s(s({ref:t},p),{},{components:r})):o.createElement(m,s({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,s=new Array(a);s[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:n,s[1]=i;for(var c=2;c<a;c++)s[c]=r[c];return o.createElement.apply(null,s)}return o.createElement.apply(null,r)}h.displayName="MDXCreateElement"},4294:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var o=r(7462),n=(r(7294),r(3905));const a={description:"HTTP/2 server recipe"},s="HTTP/2 Server",i={unversionedId:"cookbook/http2",id:"cookbook/http2",title:"HTTP/2 Server",description:"HTTP/2 server recipe",source:"@site/docs/cookbook/http2.md",sourceDirName:"cookbook",slug:"/cookbook/http2",permalink:"/docs/cookbook/http2",draft:!1,editUrl:"https://github.com/labstack/echox/blob/master/website/docs/cookbook/http2.md",tags:[],version:"current",frontMatter:{description:"HTTP/2 server recipe"},sidebar:"docsSidebar",previous:{title:"HTTP/2 Server Push",permalink:"/docs/cookbook/http2-server-push"},next:{title:"JSONP",permalink:"/docs/cookbook/jsonp"}},l={},c=[{value:"1) Generate a self-signed X.509 TLS certificate",id:"1-generate-a-self-signed-x509-tls-certificate",level:2},{value:"2) Create a handler which simply outputs the request information to the client",id:"2-create-a-handler-which-simply-outputs-the-request-information-to-the-client",level:2},{value:"3) Start TLS server using cert.pem and key.pem",id:"3-start-tls-server-using-certpem-and-keypem",level:2},{value:"4) Start the server and browse to https://localhost:1323/request to see the following output",id:"4-start-the-server-and-browse-to-httpslocalhost1323request-to-see-the-following-output",level:2},{value:"Source Code",id:"source-code",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,o.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"http2-server"},"HTTP/2 Server"),(0,n.kt)("h2",{id:"1-generate-a-self-signed-x509-tls-certificate"},"1) Generate a self-signed X.509 TLS certificate"),(0,n.kt)("p",null,"Run the following command to generate ",(0,n.kt)("inlineCode",{parentName:"p"},"cert.pem")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"key.pem")," files:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"go run $GOROOT/src/crypto/tls/generate_cert.go --host localhost\n")),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"For demo purpose, we are using a self-signed certificate. Ideally, you should obtain\na certificate from ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Certificate_authority"},"CA"),".")),(0,n.kt)("h2",{id:"2-create-a-handler-which-simply-outputs-the-request-information-to-the-client"},"2) Create a handler which simply outputs the request information to the client"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},'e.GET("/request", func(c echo.Context) error {\n  req := c.Request()\n  format := `\n    <code>\n      Protocol: %s<br>\n      Host: %s<br>\n      Remote Address: %s<br>\n      Method: %s<br>\n      Path: %s<br>\n    </code>\n  `\n  return c.HTML(http.StatusOK, fmt.Sprintf(format, req.Proto, req.Host, req.RemoteAddr, req.Method, req.URL.Path))\n})\n')),(0,n.kt)("h2",{id:"3-start-tls-server-using-certpem-and-keypem"},"3) Start TLS server using cert.pem and key.pem"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},'if err := e.StartTLS(":1323", "cert.pem", "key.pem"); err != http.ErrServerClosed {\n  log.Fatal(err)\n}\n')),(0,n.kt)("p",null,"or use customized HTTP server with your own TLSConfig"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},'s := http.Server{\n  Addr:    ":8443",\n  Handler: e, // set Echo as handler\n  TLSConfig: &tls.Config{\n    //Certificates: nil, // <-- s.ListenAndServeTLS will populate this field\n  },\n  //ReadTimeout: 30 * time.Second, // use custom timeouts\n}\nif err := s.ListenAndServeTLS("cert.pem", "key.pem"); err != http.ErrServerClosed {\n  log.Fatal(err)\n}\n')),(0,n.kt)("h2",{id:"4-start-the-server-and-browse-to-httpslocalhost1323request-to-see-the-following-output"},"4) Start the server and browse to https://localhost:1323/request to see the following output"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"Protocol: HTTP/2.0\nHost: localhost:1323\nRemote Address: [::1]:60288\nMethod: GET\nPath: /\n")),(0,n.kt)("h2",{id:"source-code"},"Source Code"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/labstack/echox/blob/master/cookbook/http2/server.go\n")))}d.isMDXComponent=!0}}]);