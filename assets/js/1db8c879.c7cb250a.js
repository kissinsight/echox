"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[708],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>v});var o=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,o,n=function(e,r){if(null==e)return{};var t,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var p=o.createContext({}),i=function(e){var r=o.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},c=function(e){var r=i(e.components);return o.createElement(p.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return o.createElement(o.Fragment,{},r)}},m=o.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=i(t),m=n,v=u["".concat(p,".").concat(m)]||u[m]||d[m]||a;return t?o.createElement(v,s(s({ref:r},c),{},{components:t})):o.createElement(v,s({ref:r},c))}));function v(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,s=new Array(a);s[0]=m;var l={};for(var p in r)hasOwnProperty.call(r,p)&&(l[p]=r[p]);l.originalType=e,l[u]="string"==typeof e?e:n,s[1]=l;for(var i=2;i<a;i++)s[i]=t[i];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},367:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>i});var o=t(7462),n=(t(7294),t(3905));const a={description:"Reverse proxy recipe"},s="Reverse Proxy",l={unversionedId:"cookbook/reverse-proxy",id:"cookbook/reverse-proxy",title:"Reverse Proxy",description:"Reverse proxy recipe",source:"@site/docs/cookbook/reverse-proxy.md",sourceDirName:"cookbook",slug:"/cookbook/reverse-proxy",permalink:"/docs/cookbook/reverse-proxy",draft:!1,editUrl:"https://github.com/labstack/echox/blob/master/website/docs/cookbook/reverse-proxy.md",tags:[],version:"current",frontMatter:{description:"Reverse proxy recipe"},sidebar:"docsSidebar",previous:{title:"Middleware",permalink:"/docs/cookbook/middleware"},next:{title:"Streaming Response",permalink:"/docs/cookbook/streaming-response"}},p={},i=[{value:"1) Identify upstream target URL(s)",id:"1-identify-upstream-target-urls",level:2},{value:"2) Setup proxy middleware with upstream targets",id:"2-setup-proxy-middleware-with-upstream-targets",level:2},{value:"3) Start upstream servers",id:"3-start-upstream-servers",level:2},{value:"4) Start the proxy server",id:"4-start-the-proxy-server",level:2},{value:"Source Code",id:"source-code",level:2}],c={toc:i},u="wrapper";function d(e){let{components:r,...t}=e;return(0,n.kt)(u,(0,o.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"reverse-proxy"},"Reverse Proxy"),(0,n.kt)("p",null,"This recipe demonstrates how you can use Echo as a reverse proxy server and load balancer in front of your favorite applications like WordPress, Node.js, Java, Python, Ruby or even Go. For simplicity, I will use Go upstream servers with WebSocket."),(0,n.kt)("h2",{id:"1-identify-upstream-target-urls"},"1) Identify upstream target URL(s)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},'url1, err := url.Parse("http://localhost:8081")\nif err != nil {\n  e.Logger.Fatal(err)\n}\nurl2, err := url.Parse("http://localhost:8082")\nif err != nil {\n  e.Logger.Fatal(err)\n}\ntargets := []*middleware.ProxyTarget{\n  {\n    URL: url1,\n  },\n  {\n    URL: url2,\n  },\n}\n')),(0,n.kt)("h2",{id:"2-setup-proxy-middleware-with-upstream-targets"},"2) Setup proxy middleware with upstream targets"),(0,n.kt)("p",null,"In the following code snippet we are using round-robin load balancing technique. You may also use ",(0,n.kt)("inlineCode",{parentName:"p"},"middleware.NewRandomBalancer()"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},"e.Use(middleware.Proxy(middleware.NewRoundRobinBalancer(targets)))\n")),(0,n.kt)("p",null,"To setup proxy for a sub-route use ",(0,n.kt)("inlineCode",{parentName:"p"},"Echo#Group()"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},'g := e.Group("/blog")\ng.Use(middleware.Proxy(...))\n')),(0,n.kt)("h2",{id:"3-start-upstream-servers"},"3) Start upstream servers"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"cd upstream")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"go run server.go server1 :8081")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"go run server.go server2 :8082"))),(0,n.kt)("h2",{id:"4-start-the-proxy-server"},"4) Start the proxy server"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"go run server.go\n")),(0,n.kt)("p",null,'Browse to http://localhost:1323, and you should see a webpage with an HTTP request being served from "server 1" and a WebSocket request being served from "server 2."'),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"HTTP\n\nHello from upstream server server1\n\nWebSocket\n\nHello from upstream server server2!\nHello from upstream server server2!\nHello from upstream server server2!\n")),(0,n.kt)("h2",{id:"source-code"},"Source Code"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/labstack/echox/blob/master/cookbook/reverse-proxy/upstream/server.go\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/labstack/echox/blob/master/cookbook/reverse-proxy/server.go\n")))}d.isMDXComponent=!0}}]);