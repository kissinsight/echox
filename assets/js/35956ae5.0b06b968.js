"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8261],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>k});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=o.createContext({}),c=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return o.createElement(s.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},f=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(t),f=r,k=d["".concat(s,".").concat(f)]||d[f]||p[f]||a;return t?o.createElement(k,i(i({ref:n},u),{},{components:t})):o.createElement(k,i({ref:n},u))}));function k(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=f;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<a;c++)i[c]=t[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}f.displayName="MDXCreateElement"},1756:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var o=t(7462),r=(t(7294),t(3905));const a={description:"CSRF middleware"},i="CSRF",l={unversionedId:"middleware/csrf",id:"middleware/csrf",title:"CSRF",description:"CSRF middleware",source:"@site/docs/middleware/csrf.md",sourceDirName:"middleware",slug:"/middleware/csrf",permalink:"/docs/middleware/csrf",draft:!1,editUrl:"https://github.com/labstack/echox/blob/master/website/docs/middleware/csrf.md",tags:[],version:"current",frontMatter:{description:"CSRF middleware"},sidebar:"docsSidebar",previous:{title:"CORS",permalink:"/docs/middleware/cors"},next:{title:"Decompress",permalink:"/docs/middleware/decompress"}},s={},c=[{value:"Usage",id:"usage",level:2},{value:"Custom Configuration",id:"custom-configuration",level:2},{value:"Usage",id:"usage-1",level:3},{value:"Accessing CSRF Token",id:"accessing-csrf-token",level:2},{value:"Server-side",id:"server-side",level:3},{value:"Client-side",id:"client-side",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Default Configuration",id:"default-configuration",level:3}],u={toc:c},d="wrapper";function p(e){let{components:n,...t}=e;return(0,r.kt)(d,(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"csrf"},"CSRF"),(0,r.kt)("p",null,"Cross-site request forgery, also known as one-click attack or session riding and\nabbreviated as CSRF (sometimes pronounced sea-surf) or XSRF, is a type of malicious\nexploit of a website where unauthorized commands are transmitted from a user that\nthe website trusts."),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"e.Use(middleware.CSRF())\n")),(0,r.kt)("h2",{id:"custom-configuration"},"Custom Configuration"),(0,r.kt)("h3",{id:"usage-1"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e := echo.New()\ne.Use(middleware.CSRFWithConfig(middleware.CSRFConfig{\n  TokenLookup: "header:X-XSRF-TOKEN",\n}))\n')),(0,r.kt)("p",null,"Example above uses ",(0,r.kt)("inlineCode",{parentName:"p"},"X-XSRF-TOKEN")," request header to extract CSRF token."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Example Configuration that reads token from Cookie")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'middleware.CSRFWithConfig(middleware.CSRFConfig{\n    TokenLookup:    "cookie:_csrf",\n    CookiePath:     "/",\n    CookieDomain:   "example.com",\n    CookieSecure:   true,\n    CookieHTTPOnly: true,\n    CookieSameSite: http.SameSiteStrictMode,\n})\n')),(0,r.kt)("h2",{id:"accessing-csrf-token"},"Accessing CSRF Token"),(0,r.kt)("h3",{id:"server-side"},"Server-side"),(0,r.kt)("p",null,"CSRF token can be accessed from ",(0,r.kt)("inlineCode",{parentName:"p"},"Echo#Context")," using ",(0,r.kt)("inlineCode",{parentName:"p"},"ContextKey")," and passed to\nthe client via template."),(0,r.kt)("h3",{id:"client-side"},"Client-side"),(0,r.kt)("p",null,"CSRF token can be accessed from CSRF cookie."),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'CSRFConfig struct {\n  // Skipper defines a function to skip middleware.\n  Skipper Skipper\n\n  // TokenLength is the length of the generated token.\n  TokenLength uint8 `json:"token_length"`\n  // Optional. Default value 32.\n\n  // TokenLookup is a string in the form of "<source>:<key>" that is used\n  // to extract token from the request.\n  // Optional. Default value "header:X-CSRF-Token".\n  // Possible values:\n  // - "header:<name>"\n  // - "form:<name>"\n  // - "query:<name>"\n  // - "cookie:<name>"\n  TokenLookup string `json:"token_lookup"`\n\n  // Context key to store generated CSRF token into context.\n  // Optional. Default value "csrf".\n  ContextKey string `json:"context_key"`\n\n  // Name of the CSRF cookie. This cookie will store CSRF token.\n  // Optional. Default value "_csrf".\n  CookieName string `json:"cookie_name"`\n\n  // Domain of the CSRF cookie.\n  // Optional. Default value none.\n  CookieDomain string `json:"cookie_domain"`\n\n  // Path of the CSRF cookie.\n  // Optional. Default value none.\n  CookiePath string `json:"cookie_path"`\n\n  // Max age (in seconds) of the CSRF cookie.\n  // Optional. Default value 86400 (24hr).\n  CookieMaxAge int `json:"cookie_max_age"`\n\n  // Indicates if CSRF cookie is secure.\n  // Optional. Default value false.\n  CookieSecure bool `json:"cookie_secure"`\n\n  // Indicates if CSRF cookie is HTTP only.\n  // Optional. Default value false.\n  CookieHTTPOnly bool `json:"cookie_http_only"`\n}\n')),(0,r.kt)("h3",{id:"default-configuration"},"Default Configuration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'DefaultCSRFConfig = CSRFConfig{\n  Skipper:      DefaultSkipper,\n  TokenLength:  32,\n  TokenLookup:  "header:" + echo.HeaderXCSRFToken,\n  ContextKey:   "csrf",\n  CookieName:   "_csrf",\n  CookieMaxAge: 86400,\n}\n')))}p.isMDXComponent=!0}}]);