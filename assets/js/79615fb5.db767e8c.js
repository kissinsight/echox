"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7415],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(7294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(r),h=s,m=u["".concat(l,".").concat(h)]||u[h]||d[h]||o;return r?n.createElement(m,a(a({ref:t},c),{},{components:r})):n.createElement(m,a({ref:t},c))}));function m(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=r.length,a=new Array(o);a[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:s,a[1]=i;for(var p=2;p<o;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},9304:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var n=r(7462),s=(r(7294),r(3905));const o={description:"HTTP/2 server push recipe"},a="HTTP/2 Server Push",i={unversionedId:"cookbook/http2-server-push",id:"cookbook/http2-server-push",title:"HTTP/2 Server Push",description:"HTTP/2 server push recipe",source:"@site/docs/cookbook/http2-server-push.md",sourceDirName:"cookbook",slug:"/cookbook/http2-server-push",permalink:"/docs/cookbook/http2-server-push",draft:!1,editUrl:"https://github.com/labstack/echox/blob/master/website/docs/cookbook/http2-server-push.md",tags:[],version:"current",frontMatter:{description:"HTTP/2 server push recipe"},sidebar:"docsSidebar",previous:{title:"Hello World",permalink:"/docs/cookbook/hello-world"},next:{title:"HTTP/2 Server",permalink:"/docs/cookbook/http2"}},l={},p=[{value:"Send web assets using HTTP/2 server push",id:"send-web-assets-using-http2-server-push",level:2},{value:"Generate a self-signed X.509 TLS certificate",id:"generate-a-self-signed-x509-tls-certificate",level:3},{value:"1) Register a route to serve web assets",id:"1-register-a-route-to-serve-web-assets",level:3},{value:"2) Create a handler to serve index.html and push it&#39;s dependencies",id:"2-create-a-handler-to-serve-indexhtml-and-push-its-dependencies",level:3},{value:"3) Start TLS server using cert.pem and key.pem",id:"3-start-tls-server-using-certpem-and-keypem",level:3},{value:"4) Start the server and browse to https://localhost:1323",id:"4-start-the-server-and-browse-to-httpslocalhost1323",level:3},{value:"Source Code",id:"source-code",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...r}=e;return(0,s.kt)(u,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"http2-server-push"},"HTTP/2 Server Push"),(0,s.kt)("admonition",{type:"note"},(0,s.kt)("p",{parentName:"admonition"},"Requires go1.8+")),(0,s.kt)("h2",{id:"send-web-assets-using-http2-server-push"},"Send web assets using HTTP/2 server push"),(0,s.kt)("h3",{id:"generate-a-self-signed-x509-tls-certificate"},(0,s.kt)("a",{parentName:"h3",href:"http2#step-1-generate-a-self-signed-x-509-tls-certificate"},"Generate a self-signed X.509 TLS certificate")),(0,s.kt)("h3",{id:"1-register-a-route-to-serve-web-assets"},"1) Register a route to serve web assets"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},'e.Static("/", "static")\n')),(0,s.kt)("h3",{id:"2-create-a-handler-to-serve-indexhtml-and-push-its-dependencies"},"2) Create a handler to serve index.html and push it's dependencies"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},'e.GET("/", func(c echo.Context) (err error) {\n  pusher, ok := c.Response().Writer.(http.Pusher)\n  if ok {\n    if err = pusher.Push("/app.css", nil); err != nil {\n      return\n    }\n    if err = pusher.Push("/app.js", nil); err != nil {\n      return\n    }\n    if err = pusher.Push("/echo.png", nil); err != nil {\n      return\n    }\n  }\n  return c.File("index.html")\n})\n')),(0,s.kt)("admonition",{type:"info"},(0,s.kt)("p",{parentName:"admonition"},"If ",(0,s.kt)("inlineCode",{parentName:"p"},"http.Pusher")," is supported, web assets are pushed; otherwise, client makes separate requests to get them.")),(0,s.kt)("h3",{id:"3-start-tls-server-using-certpem-and-keypem"},"3) Start TLS server using cert.pem and key.pem"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},'if err := e.StartTLS(":1323", "cert.pem", "key.pem"); err != http.ErrServerClosed {\n  log.Fatal(err)\n}\n')),(0,s.kt)("p",null,"or use customized HTTP server with your own TLSConfig"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},'s := http.Server{\n  Addr:    ":8443",\n  Handler: e, // set Echo as handler\n  TLSConfig: &tls.Config{\n    //Certificates: nil, // <-- s.ListenAndServeTLS will populate this field\n  },\n  //ReadTimeout: 30 * time.Second, // use custom timeouts\n}\nif err := s.ListenAndServeTLS("cert.pem", "key.pem"); err != http.ErrServerClosed {\n  log.Fatal(err)\n}\n')),(0,s.kt)("h3",{id:"4-start-the-server-and-browse-to-httpslocalhost1323"},"4) Start the server and browse to https://localhost:1323"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"Protocol: HTTP/2.0\nHost: localhost:1323\nRemote Address: [::1]:60288\nMethod: GET\nPath: /\n")),(0,s.kt)("h2",{id:"source-code"},"Source Code"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-html",metastring:"reference",reference:!0},"https://github.com/labstack/echox/blob/master/cookbook/http2-server-push/index.html\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go",metastring:"reference",reference:!0},"https://github.com/labstack/echox/blob/master/cookbook/http2-server-push/server.go\n")))}d.isMDXComponent=!0}}]);